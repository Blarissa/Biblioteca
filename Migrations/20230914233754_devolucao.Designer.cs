// <auto-generated />
using System;
using Biblioteca.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RepositorioDeLivros.Migrations
{
    [DbContext(typeof(BibliotecaContexto))]
    [Migration("20230914233754_devolucao")]
    partial class devolucao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.Model.Devolucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_hora");

                    b.Property<int>("EmprestimoId")
                        .HasColumnType("integer")
                        .HasColumnName("emprestimo_id");

                    b.HasKey("Id")
                        .HasName("pk_devolucoes");

                    b.HasIndex("EmprestimoId")
                        .IsUnique()
                        .HasDatabaseName("ix_devolucoes_emprestimo_id");

                    b.ToTable("devolucoes", (string)null);
                });

            modelBuilder.Entity("Biblioteca.Model.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_hora");

                    b.Property<int>("LeitorId")
                        .HasColumnType("integer")
                        .HasColumnName("leitor_id");

                    b.Property<int>("LivroId")
                        .HasColumnType("integer")
                        .HasColumnName("livro_id");

                    b.HasKey("Id")
                        .HasName("pk_emprestimos");

                    b.HasIndex("LeitorId")
                        .HasDatabaseName("ix_emprestimos_leitor_id");

                    b.HasIndex("LivroId")
                        .HasDatabaseName("ix_emprestimos_livro_id");

                    b.ToTable("emprestimos", (string)null);
                });

            modelBuilder.Entity("Biblioteca.Model.Leitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.HasKey("Id")
                        .HasName("pk_leitores");

                    b.ToTable("leitores", (string)null);
                });

            modelBuilder.Entity("Biblioteca.Model.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("integer")
                        .HasColumnName("ano");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("autor");

                    b.Property<int>("Edicao")
                        .HasColumnType("integer")
                        .HasColumnName("edicao");

                    b.Property<long>("ISBN")
                        .HasColumnType("bigint")
                        .HasColumnName("isbn");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("pk_livros");

                    b.ToTable("livros", (string)null);
                });

            modelBuilder.Entity("Biblioteca.Model.Devolucao", b =>
                {
                    b.HasOne("Biblioteca.Model.Emprestimo", "Emprestimo")
                        .WithOne("Devolucao")
                        .HasForeignKey("Biblioteca.Model.Devolucao", "EmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_devolucoes_emprestimos_emprestimo_id");

                    b.Navigation("Emprestimo");
                });

            modelBuilder.Entity("Biblioteca.Model.Emprestimo", b =>
                {
                    b.HasOne("Biblioteca.Model.Leitor", "Leitor")
                        .WithMany("Emprestimos")
                        .HasForeignKey("LeitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_emprestimos_leitores_leitor_id");

                    b.HasOne("Biblioteca.Model.Livro", "Livro")
                        .WithMany("Emprestimos")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_emprestimos_livros_livro_id");

                    b.Navigation("Leitor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Biblioteca.Model.Emprestimo", b =>
                {
                    b.Navigation("Devolucao")
                        .IsRequired();
                });

            modelBuilder.Entity("Biblioteca.Model.Leitor", b =>
                {
                    b.Navigation("Emprestimos");
                });

            modelBuilder.Entity("Biblioteca.Model.Livro", b =>
                {
                    b.Navigation("Emprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
